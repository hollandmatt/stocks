{"version":3,"sources":["components/StocksList.js","components/StockDescription.js","api/Api.js","App.js","index.js"],"names":["StocksList","_ref","stocks","onChange","options","_","sortBy","map","stock","value","symbol","label","companyName","o","react_default","a","createElement","Creatable_default","placeholder","formatCreateLabel","input","concat","logoUrl","Logo","_ref2","alt","className","src","StockDescription","details","errorMessage","description","price","StockDescription_Logo","BASE_URL","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","currentSelectionDetails","undefined","onChangeStockSelection","bind","assertThisInitialized","_this2","fetch","then","response","json","setState","option","_this3","toUpperCase","getSingleStockDetails","getSingleStockQuote","quote","latestPrice","catch","_this$state","components_StocksList","get","components_StockDescription","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.5901563d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport Creatable from 'react-select/lib/Creatable';\n\nconst StocksList = ({ stocks, onChange }) => {\n  const options = _.sortBy(\n    stocks.map(stock => {\n      return {\n        value: stock.symbol,\n        label: stock.companyName\n      };\n    }),\n    o => o.label\n  );\n  return (\n    <Creatable\n      options={options}\n      placeholder=\"Select or enter a stock symbol...\"\n      formatCreateLabel={input => `Load details for ${input}`}\n      onChange={onChange}\n    />\n  );\n};\n\nStocksList.propTypes = {\n  stocks: PropTypes.array.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nexport default StocksList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst StockDescription = ({ details, errorMessage }) => {\n  if (details) {\n    const { symbol, description, price } = details;\n    return (\n      <div>\n        <Logo symbol={symbol} />\n        <h3>Symbol</h3>\n        <p>{symbol}</p>\n        <h3>Current Stock Price</h3>\n        <p>{price} USD</p>\n        <h3>Description</h3>\n        <p>{description}</p>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"message\">\n        {errorMessage || 'Select a stock to start.'}\n      </div>\n    );\n  }\n};\n\nStockDescription.propTypes = {\n  details: PropTypes.object,\n  errorMessage: PropTypes.string\n};\n\nconst logoUrl = symbol =>\n  `https://storage.googleapis.com/iex/api/logos/${symbol}.png`;\n\nexport const Logo = ({ symbol }) => (\n  <img alt=\"company logo\" className=\"logo\" src={logoUrl(symbol)} />\n);\n\nLogo.propTypes = {\n  symbol: PropTypes.string.isRequired\n};\n\nexport default StockDescription;\n","const BASE_URL = 'https://api.iextrading.com/1.0';\n\nconst getAllStocks = () => {\n  return fetch(`${BASE_URL}/stock/market/list/infocus`).then(response =>\n    response.json()\n  );\n};\n\nconst getSingleStockDetails = symbol => {\n  return fetch(`${BASE_URL}/stock/${symbol}/company`).then(response =>\n    response.json()\n  );\n};\n\nconst getSingleStockQuote = symbol => {\n  return fetch(`${BASE_URL}/stock/${symbol}/quote`).then(response =>\n    response.json()\n  );\n};\n\nexport { getAllStocks, getSingleStockDetails, getSingleStockQuote };\n","import React, { Component } from 'react';\nimport './App.css';\nimport StocksList from './components/StocksList';\nimport StockDescription from './components/StockDescription';\nimport {\n  getAllStocks,\n  getSingleStockDetails,\n  getSingleStockQuote\n} from './api/Api';\nimport _ from 'lodash';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      stocks: [],\n      currentSelectionDetails: undefined,\n      errorMessage: undefined\n    };\n    this.onChangeStockSelection = this.onChangeStockSelection.bind(this);\n  }\n\n  componentDidMount() {\n    getAllStocks().then(stocks => {\n      this.setState({ stocks });\n    });\n  }\n\n  onChangeStockSelection(option) {\n    if (option.value) {\n      const symbol = option.value.toUpperCase();\n      getSingleStockDetails(symbol)\n        .then(details => {\n          getSingleStockQuote(symbol).then(quote => {\n            this.setState({\n              currentSelectionDetails: {\n                symbol: symbol,\n                price: quote.latestPrice,\n                description: details.description\n              },\n              errorMessage: null\n            });\n          });\n        })\n        .catch(() => {\n          this.setState({\n            errorMessage: `${symbol} is not a valid stock symbol.`,\n            currentSelectionDetails: null\n          });\n        });\n    }\n  }\n\n  render() {\n    const { stocks, currentSelectionDetails, errorMessage } = this.state;\n    return (\n      <div className=\"App\">\n        <StocksList\n          stocks={stocks}\n          onChange={this.onChangeStockSelection}\n          value={{ value: _.get(currentSelectionDetails, 'symbol') }}\n        />\n        <StockDescription\n          details={currentSelectionDetails}\n          errorMessage={errorMessage}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}